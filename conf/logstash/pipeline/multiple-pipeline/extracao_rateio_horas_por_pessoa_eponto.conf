input {
  jdbc {
     jdbc_driver_library => "/etc/logstash/driver/sqljdbc_6.0/enu/jre8/sqljdbc42.jar"
     jdbc_driver_class => "com.microsoft.sqlserver.jdbc.SQLServerDriver"
     jdbc_connection_string => "jdbc:sqlserver://10.200.100.15:1433"
     jdbc_user => "svc_sarg"
     jdbc_password => "6HzgK>aqUu7x"
     schedule => "*/5 * * * *"
     statement => "SELECT
ID_FUNC
, NOME
, EMAIL
, PERIODO
, ISNULL(SEMANA_1,'') SEMANA_1
, ISNULL(SEMANA_2,'') SEMANA_2
, ISNULL(SEMANA_3,'') SEMANA_3
, ISNULL(SEMANA_4,'') SEMANA_4
, ISNULL(SEMANA_5,'') SEMANA_5
, ULTIMA_SEMANA_PERIODO
, CASE 
	WHEN 
		ULTIMA_SEMANA_PERIODO = 1 THEN
			CASE WHEN ( ISNULL(SEMANA_1, 'OK')) = 'OK' THEN 'RATEADO'
			ELSE '' END
	WHEN 
		ULTIMA_SEMANA_PERIODO = 2 THEN
			CASE WHEN SEMANA_1 <> 'OK' THEN 'PENDENTE'
				 WHEN (ISNULL(SEMANA_1, 'OK') = 'OK' ) THEN 'RATEADO'
			ELSE '' END
	WHEN 
		ULTIMA_SEMANA_PERIODO = 3 THEN
			CASE WHEN SEMANA_1 <> 'OK' THEN 'ATRASADO'
				 WHEN SEMANA_2 <> 'OK' THEN 'PENDENTE'
				 WHEN (ISNULL(SEMANA_1, 'OK') = 'OK' OR ISNULL(SEMANA_2, 'OK') = 'OK' ) THEN 'RATEADO'
			ELSE '' END
	WHEN 
		ULTIMA_SEMANA_PERIODO = 4 THEN
			CASE WHEN (SEMANA_2 <> 'OK' OR SEMANA_1 <> 'OK') THEN 'ATRASADO'
				 WHEN SEMANA_3 <> 'OK' THEN 'PENDENTE'
				 WHEN (ISNULL(SEMANA_1, 'OK') = 'OK' OR ISNULL(SEMANA_2, 'OK') = 'OK' OR ISNULL(SEMANA_3, 'OK') = 'OK' ) THEN 'RATEADO'
			ELSE '' END
	WHEN 
		ULTIMA_SEMANA_PERIODO = 5 THEN
			CASE WHEN (SEMANA_3 <> 'OK' OR SEMANA_2 <> 'OK' OR SEMANA_1 <> 'OK') THEN 'ATRASADO'
				 WHEN SEMANA_4 <> 'OK' THEN 'PENDENTE'
				 WHEN (ISNULL(SEMANA_1, 'OK') = 'OK' OR ISNULL(SEMANA_2, 'OK') = 'OK' OR ISNULL(SEMANA_3, 'OK') = 'OK' OR ISNULL(SEMANA_4, 'OK') = 'OK' ) THEN 'RATEADO'
			ELSE '' END
  END ESTATUS
FROM (
	select
	ID_FUNC
	, NOME
	, EMAIL
	, PERIODO
	, MAX(CASE WHEN SEMANA = 1 THEN (STATUS_SEMANA) ELSE NULL END) AS 'SEMANA_1'
	, MAX(CASE WHEN SEMANA = 2 THEN (STATUS_SEMANA) ELSE NULL END) AS 'SEMANA_2'
	, MAX(CASE WHEN SEMANA = 3 THEN (STATUS_SEMANA) ELSE NULL END) AS 'SEMANA_3'
	, MAX(CASE WHEN SEMANA = 4 THEN (STATUS_SEMANA) ELSE NULL END) AS 'SEMANA_4'
	, MAX(CASE WHEN SEMANA = 5 THEN (STATUS_SEMANA) ELSE NULL END) AS 'SEMANA_5'
	, Datepart(week,CASE WHEN GETDATE() > DT_FINAL THEN DT_FINAL ELSE GETDATE() END) - DATEPART(week, (SELECT P.DT_INICIAL FROM eponto.dbo.PERIODO P WHERE ID_PERIODO_PK = ( SELECT MAX(ID_PERIODO_PK) FROM eponto.dbo.PERIODO))) + 1  AS 'ULTIMA_SEMANA_PERIODO'
	FROM (
		SELECT  
		FUNC.ID_FUNC AS 'ID_FUNC'
		, ltrim(rtrim(FUNC.NOME)) as 'NOME'
		, LOWER(ltrim(rtrim(FUNC.EMAIL))) AS 'EMAIL'
		, case when (ROUND(ISNULL(HORAS_SEM_RATEIO.HORAS, 0) - ISNULL(HORAS_RATEIO.HORAS, 0),0) <= 0) OR (HORAS_SEM_RATEIO.HORAS IS NULL AND HORAS_RATEIO.HORAS IS NULL)then 
			'OK'
		else
			CONVERT(VARCHAR, ROUND(ISNULL(HORAS_SEM_RATEIO.HORAS, 0) - ISNULL(HORAS_RATEIO.HORAS, 0),2))
		end as 'STATUS_SEMANA'
		, HORAS_SEM_RATEIO.PERIODO
		, convert (integer, HORAS_SEM_RATEIO.SEMANA) as 'SEMANA'
		, ISNULL(HORAS_SEM_RATEIO.DT_INICIAL, HORAS_RATEIO.DT_INICIAL) AS 'DT_INICIAL'
		, ISNULL(HORAS_SEM_RATEIO.DT_FINAL, HORAS_RATEIO.DT_FINAL) AS 'DT_FINAL'		
		FROM 
			(
			(
				SELECT 
					DISTINCT d.ID_FUNCIONARIO_PK AS 'ID_FUNC' 
					, D.DC_NOME AS 'NOME'
               , USU.DC_EMAIL AS 'EMAIL'
				FROM 
					eponto.dbo.ITEM_CONTABIL A 
					INNER JOIN eponto.dbo.ATIVIDADE B ON A.ID_ITEM_CONTABIL_PK = B.ID_ITEM_CONTABIL_FK 
					INNER JOIN eponto.dbo.RATEIO_HORA C ON C.ID_ATIVIDADE_FK = B.ID_ATIVIDADE_PK 
					INNER JOIN eponto.dbo.ATIVIDADE_FUNCIONARIO F ON B.ID_ATIVIDADE_PK = F.ID_ATIVIDADE_FK 
					INNER JOIN eponto.dbo.FUNCIONARIO D ON D.ID_FUNCIONARIO_PK = F.ID_FUNCIONARIO_FK AND C.ID_FUNCIONARIO_FK = D.ID_FUNCIONARIO_PK 
					INNER JOIN eponto.dbo.CENTRO_CUSTO CC ON D.ID_CENTRO_CUSTO_FK = CC.ID_CENTRO_CUSTO_PK 
					INNER JOIN eponto.dbo.FUNCAO AS E ON D.ID_FUNCAO_FK = E.ID_FUNCAO_PK  
               INNER JOIN eponto.dbo.USUARIO USU ON D.ID_FUNCIONARIO_PK = USU.ID_FUNCIONARIO_FK
				WHERE  
					D.ID_SITUACAO_FK = 12 
					AND CC.NU_CODIGO IN ('1010','1011','1012','1013','1014','1015') 
					AND D.ID_FUNCIONARIO_PK NOT IN (25, 394, 441, 69, 310, 3, 497)
			) FUNC	 

			LEFT JOIN ( 

				SELECT MP.ID_FUNCIONARIO_FK
					, MP.PERIODO
					, MP.SEMANA
					, MP.DT_INICIAL
					, MP.DT_FINAL
					, SUM(MP.QTD_HORAS) AS 'HORAS'
				FROM (

					SELECT 
						MP.ID_FUNCIONARIO_FK
						, Datepart(week,MP.DT_DATA) - DATEPART(week, (SELECT P.DT_INICIAL FROM eponto.dbo.PERIODO P WHERE ID_PERIODO_PK = ( SELECT MAX(ID_PERIODO_PK) FROM eponto.dbo.PERIODO))) + 1 AS 'SEMANA'
						, CASE 
							WHEN CAST(DAY(MP.DT_DATA) AS int) BETWEEN 1 AND 20 THEN 
								(CONVERT(CHAR(6), DATEADD(MONTH,-1, MP.DT_DATA), 112)) + ' - ' + (CONVERT(CHAR(6), MP.DT_DATA, 112)) 
							ELSE 
								(CONVERT(CHAR(6), MP.DT_DATA, 112)) + ' - ' + (CONVERT(CHAR(6), DATEADD(MONTH,+1, MP.DT_DATA), 112)) 
						END AS 'PERIODO'
						, (FLOOR(MP.NU_QTD_CALCULADA) + ((MP.NU_QTD_CALCULADA - FLOOR(MP.NU_QTD_CALCULADA)) * 100)/60) AS QTD_HORAS
						, P.DT_INICIAL
						, P.DT_FINAL
						, MP.DT_DATA
					FROM eponto.dbo.MANUTENCAO_PONTO MP
						INNER JOIN eponto.dbo.FUNCIONARIO D ON D.ID_FUNCIONARIO_PK = MP.ID_FUNCIONARIO_FK
						INNER JOIN eponto.dbo.CENTRO_CUSTO CC ON D.ID_CENTRO_CUSTO_FK = CC.ID_CENTRO_CUSTO_PK 
						LEFT JOIN eponto.dbo.PERIODO P ON P.ID_PERIODO_PK IN (SELECT ISNULL(MAX(ID_PERIODO_PK), (SELECT MAX(p1.ID_PERIODO_PK) FROM eponto.dbo.PERIODO p1 )) FROM eponto.dbo.PERIODO p2 WHERE GETDATE() BETWEEN p2.DT_INICIAL AND p2.DT_FINAL)
					WHERE 
						D.ID_SITUACAO_FK = 12 
						AND CC.NU_CODIGO IN ('1010','1011','1012','1013','1014','1015') 
						AND D.ID_FUNCIONARIO_PK NOT IN (25, 394, 441, 69, 310, 3, 497)
						AND ISNULL(MP.ID_EVENTO_FK, 2) IN (2,4,5,6,29)
						AND MP.DT_DATA >= P.DT_INICIAL 
						AND MP.DT_DATA <= P.DT_FINAL 
				) MP
				GROUP BY MP.ID_FUNCIONARIO_FK
					, MP.PERIODO
					, MP.SEMANA
					, MP.DT_INICIAL
					, MP.DT_FINAL

			) HORAS_SEM_RATEIO ON FUNC.ID_FUNC = HORAS_SEM_RATEIO.ID_FUNCIONARIO_FK
		
			LEFT JOIN ( 


				SELECT RH.ID_FUNCIONARIO_FK
					, RH.PERIODO
					, RH.SEMANA
					, RH.DT_INICIAL
					, RH.DT_FINAL
					, SUM(RH.QTD_HORAS) AS 'HORAS'
				FROM (
					SELECT RH.ID_FUNCIONARIO_FK
						, CASE 
							WHEN CAST(DAY(RH.DT_DATA) AS int) BETWEEN 1 AND 20 THEN 
								(CONVERT(CHAR(6), DATEADD(MONTH,-1, RH.DT_DATA), 112)) + ' - ' + (CONVERT(CHAR(6), RH.DT_DATA, 112)) 
							ELSE 
								(CONVERT(CHAR(6), RH.DT_DATA, 112)) + ' - ' + (CONVERT(CHAR(6), DATEADD(MONTH,+1, RH.DT_DATA), 112)) 
						END AS 'PERIODO'
						, Datepart(week,RH.DT_DATA) - DATEPART(week, (SELECT P.DT_INICIAL FROM eponto.dbo.PERIODO P WHERE ID_PERIODO_PK = ( SELECT MAX(ID_PERIODO_PK) FROM eponto.dbo.PERIODO))) + 1 AS 'SEMANA'
						, (FLOOR(RH.NU_HORA) + ((RH.NU_HORA - FLOOR(RH.NU_HORA)) * 100)/60) AS QTD_HORAS
						, RH.DT_DATA
						, P.DT_INICIAL
						, P.DT_FINAL
					FROM eponto.dbo.RATEIO_HORA RH
						INNER JOIN eponto.dbo.FUNCIONARIO D ON D.ID_FUNCIONARIO_PK = RH.ID_FUNCIONARIO_FK
						INNER JOIN eponto.dbo.CENTRO_CUSTO CC ON D.ID_CENTRO_CUSTO_FK = CC.ID_CENTRO_CUSTO_PK 
						LEFT JOIN eponto.dbo.PERIODO P ON P.ID_PERIODO_PK IN (SELECT ISNULL(MAX(ID_PERIODO_PK), (SELECT MAX(p1.ID_PERIODO_PK) FROM eponto.dbo.PERIODO p1 )) FROM eponto.dbo.PERIODO p2 WHERE GETDATE() BETWEEN p2.DT_INICIAL AND p2.DT_FINAL)
					WHERE 
						D.ID_SITUACAO_FK = 12 
						AND CC.NU_CODIGO IN ('1010','1011','1012','1013','1014','1015') 
						AND D.ID_FUNCIONARIO_PK NOT IN (25, 394, 441, 69, 310, 3, 497)
						AND ISNULL(RH.ID_EVENTO_FK, 2) IN (2,4,5,6,29)
						AND RH.DT_DATA >= P.DT_INICIAL 
						AND RH.DT_DATA <= P.DT_FINAL 
				) RH

				GROUP BY RH.ID_FUNCIONARIO_FK
					, RH.PERIODO
					, RH.SEMANA
					, RH.DT_INICIAL
					, RH.DT_FINAL


			) HORAS_RATEIO ON FUNC.ID_FUNC = HORAS_RATEIO.ID_FUNCIONARIO_FK
			AND HORAS_SEM_RATEIO.ID_FUNCIONARIO_FK = HORAS_RATEIO.ID_FUNCIONARIO_FK
			AND HORAS_SEM_RATEIO.PERIODO = HORAS_RATEIO.PERIODO
			AND HORAS_SEM_RATEIO.SEMANA = HORAS_RATEIO.SEMANA

		)
	) RESULTADO
	WHERE 0=0
	GROUP BY ID_FUNC
	, NOME
	, EMAIL
	, PERIODO
	, Datepart(week,CASE WHEN GETDATE() > DT_FINAL THEN DT_FINAL ELSE GETDATE() END)
) FINAL" 
  }
}

## Add your filters / logstash plugins configuration here

output {
        jdbc {
        driver_jar_path => 	"/etc/logstash/driver/mysql-connector-java-5.1.36/mysql-connector-java-5.1.36-bin.jar"
        driver_class => "com.mysql.jdbc.Driver"
        connection_string => "jdbc:mysql://db:3306/sarg?user=root&password=root"
        statement => [ "INSERT INTO painel_rateio_horas_por_pessoa_logstash (id_func, nome, email, semana_1, semana_2, semana_3, semana_4, semana_5, periodo, ultima_semana_periodo, estatus) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE NOME = VALUES(NOME), EMAIL = VALUES(EMAIL), SEMANA_1 = VALUES(SEMANA_1), SEMANA_2 = VALUES(SEMANA_2), SEMANA_3 = VALUES(SEMANA_3), SEMANA_4 = VALUES(SEMANA_4), SEMANA_5 = VALUES(SEMANA_5), PERIODO = VALUES(PERIODO), ULTIMA_SEMANA_PERIODO = VALUES(ULTIMA_SEMANA_PERIODO), ESTATUS = VALUES(ESTATUS)", "id_func", "nome", "email", "semana_1", "semana_2", "semana_3", "semana_4", "semana_5", "periodo", "ultima_semana_periodo", "estatus" ]
        }
#	file {
#		path => "/tmp/rateio.txt"
#	}
}
